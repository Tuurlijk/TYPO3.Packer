---

- name: Setup NEOS site directories
  sudo: vagrant
  file: path={{ typo3_webroot }}{{ item }} state=directory mode=0775
  with_items: neos.sites.keys()
  tags: neos-neos-sites

- name: Setup NEOS sites
  sudo: vagrant
  shell: if [ ! "$(ls -A {{ typo3_webroot }}{{ item.key }})" ]; then composer create-project --no-dev typo3/neos-base-distribution {{ typo3_webroot }}{{ item.key }} {{ item.value }}; fi
  with_dict: neos.sites
  tags: neos-neos-sites

- name: Create ramdisk directories to offload Data/Temporary to ramdisk
  file: path=/mnt/neoscache/{{ item }} state=directory owner={{nginx_user}} group={{nginx_group}} mode=0775
  with_items: neos.sites.keys()
  tags: neos-neos-ramdisk

- name: Ensure Data/Temporary directories exist
  sudo: vagrant
  file: path={{ typo3_webroot }}{{ item }}/Data/Temporary/ state=directory mode=0775
  with_items: neos.sites.keys()
  tags: neos-neos-ramdisk

- name: Make fstab entries for NEOS Data/Temporary
  mount: src=/mnt/neoscache/{{ item }} name={{ typo3_webroot }}{{ item }}/Data/Temporary/ fstype=none opts=bind,noauto state=present
  with_items: neos.sites.keys()
  tags: neos-neos-ramdisk

- name: Mount bind NEOS Data/Temporary ramdisks
  shell: if ! mountpoint -q {{ typo3_webroot }}{{ item }}/Data/Temporary; then mount /mnt/neoscache/{{ item }}; fi
  with_items: neos.sites.keys()
  tags: neos-neos-ramdisk

- name: Ensure Configuration directory exitst
  sudo: vagrant
  file: path={{ typo3_webroot }}{{ item }}/Configuration/ state=directory mode=0775
  with_items: neos.sites.keys()

- name: Copy Settings.yaml to Configuration
  sudo: vagrant
  template: src=neos/Settings.yaml dest={{ typo3_webroot }}{{ item }}/Configuration/Settings.yaml
  with_items: neos.sites.keys()

- name: Setup demo sites on NEOS
  sudo: vagrant
  shell: if [ ! -f {{ typo3_webroot }}{{ item[0] }}/Configuration/Caches.yaml ]; then {{ typo3_webroot }}{{ item[0] }}/flow {{ item[1] }}; fi
  with_nested:
    - neos.sites.keys()
    - ['doctrine:migrate', 'site:import --package-key TYPO3.NeosDemoTypo3Org', "user:create admin {{ mariadb.password }} Admin Istrator --roles TYPO3.Neos:Administrator", "cache:warmup"]

- name: Copy memcached Caches.yaml to Configuration
  sudo: vagrant
  copy: src=neos/Configuration/Caches.yaml dest={{ typo3_webroot }}{{ item }}/Configuration/Caches.yaml force=no
  with_items: neos.sites.keys()
