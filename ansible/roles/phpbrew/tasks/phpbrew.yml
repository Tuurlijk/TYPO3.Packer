---

- name: Phpbrew install required packages
  apt: name={{ item }} state=present
  with_items: "{{ php_brew_required_packages }}"

- name: Check if freetype symlinks exist
  stat: path=/usr/include/freetype2/freetype/freetype.h
  register: freetype_link_check

- name: Phpbrew prevent freetype.h not found configure error
  shell: mkdir /usr/include/freetype2/freetype; ln -s /usr/include/freetype2/{{ item }} /usr/include/freetype2/freetype/{{ item }}
  when: not freetype_link_check.stat.exists
  with_items:
    - freetype.h
    - ft2build.h

- name: Phpbrew install
  get_url: url=https://github.com/phpbrew/phpbrew/raw/master/phpbrew dest=/usr/bin/phpbrew mode=0755

- name: Phpbrew init
  shell: phpbrew init
  environment:
    PHPBREW_ROOT: /usr/local/phpbrew
    PATH: /root/bin:{{ ansible_env.PATH }}
  args:
    executable: /bin/bash

- name: Phpbrew profile setup
  shell: echo '# phpbrew setup' > /etc/profile.d/phpbrew.sh; echo 'export PHPBREW_ROOT=/usr/local/phpbrew' >> /etc/profile.d/phpbrew.sh; echo 'export PHPBREW_SET_PROMPT=1' >> /etc/profile.d/phpbrew.sh; echo 'source ~/.phpbrew/bashrc' >> /etc/profile.d/phpbrew.sh; executable=/bin/bash

- name: Ensure the root user bin dir exists
  file: path=/root/bin state=directory mode=0775

- name: Enable ccache
  file: src=/usr/bin/ccache dest=/root/bin/{{ item }} state=link
  with_items: ['gcc', 'g++', 'cc', 'c++']

- name: Brew php versions
  shell: if [ ! -f /usr/local/phpbrew/php/php-{{ item }}/bin/php ]; then phpbrew install {{ item }} {{ php_brew_options }}; fi
  environment:
    PHPBREW_ROOT: /usr/local/phpbrew
    PATH: /root/bin:{{ ansible_env.PATH }}
  with_items: "{{ php_brew_versions }}"

- name: Install and enable php extensions for versions other than 7.x
  shell: source ~/.phpbrew/bashrc; phpbrew use php-{{ item[0] }}; if [ ! -f /usr/local/phpbrew/php/php-{{ item[0] }}/var/db/{{ item[1] }}.ini ]; then phpbrew ext install {{ item[1] }}; fi executable=/bin/bash
  environment:
    PHPBREW_ROOT: /usr/local/phpbrew
    PATH: /root/bin:{{ ansible_env.PATH }}
  with_nested:
    - "{{ php_brew_versions }}"
    - "{{ php_brew_extensions }}"
  when: not item[0] | match('^((7)\\.(\d))\\.')
  ignore_errors: yes

- name: Disable php extensions xdebug for versions other than 7.x
  shell: source ~/.phpbrew/bashrc; phpbrew use php-{{ item[0] }}; if [ -f /usr/local/phpbrew/php/php-{{ item[0] }}/var/db/{{ item[1] }}.ini ]; then phpbrew ext disable {{ item[1] }}; fi executable=/bin/bash
  environment:
    PHPBREW_ROOT: /usr/local/phpbrew
    PATH: /root/bin:{{ ansible_env.PATH }}
  with_nested:
    - "{{ php_brew_versions }}"
    - [xdebug]
  when: not item[0] | match('^((7)\\.(\d))\\.')
  ignore_errors: yes

- name: Install and enable gd extension for version 7.x
  shell: source ~/.phpbrew/bashrc; phpbrew use php-{{ item[0] }}; if [ ! -f /usr/local/phpbrew/php/php-{{ item[0] }}/var/db/{{ item[1] }}.ini ]; then phpbrew ext install {{ item[1] }}; fi executable=/bin/bash
  environment:
    PHPBREW_ROOT: /usr/local/phpbrew
    PATH: /root/bin:{{ ansible_env.PATH }}
  with_nested:
    - "{{ php_brew_versions }}"
    - [gd]
  when: item[0] | match('^((7)\\.(\d))\\.')
  ignore_errors: yes

- name: Install and enable redis extension for version 7.x
  shell: source ~/.phpbrew/bashrc; phpbrew use php-{{ item }}; if [ ! -f /usr/local/phpbrew/php/php-{{ item }}/var/db/redis.ini ]; then phpbrew ext install https://github.com/phpredis/phpredis php7; fi executable=/bin/bash
  environment:
    PHPBREW_ROOT: /usr/local/phpbrew
    PATH: /root/bin:{{ ansible_env.PATH }}
  with_items: "{{ php_brew_versions }}"
  when: item | match('^((7)\\.(\d))\\.')
  ignore_errors: yes

- name: Install and enable memcache extension for version 7.x
  shell: source ~/.phpbrew/bashrc; phpbrew use php-{{ item }}; if [ ! -f /usr/local/phpbrew/php/php-{{ item }}/var/db/memcache.ini ]; then phpbrew ext install https://github.com/php-memcached-dev/php-memcached php7 -- --disable-memcached-sasl; fi executable=/bin/bash
  environment:
    PHPBREW_ROOT: /usr/local/phpbrew
    PATH: /root/bin:{{ ansible_env.PATH }}
  with_items: "{{ php_brew_versions }}"
  when: item | match('^((7)\\.(\d))\\.')
  ignore_errors: yes

- name: Customize PHP brew configuration files
  ini_file: dest=/usr/local/phpbrew/php/php-{{ item[0] }}/etc/php.ini section="{{ item[1].section }}" option="{{ item[1].option }}" value="{{ item[1].value }}" backup=yes
  with_nested:
    - "{{ php_brew_versions }}"
    - "{{ php_ini }}"

- name: Copy default FPM configuration file
  template: src=php-fpm.conf.j2 dest=/usr/local/phpbrew/php/php-{{ item }}/etc/php-fpm.conf
  with_items: "{{ php_brew_versions }}"

#- name: Copy the FPM configuration
#  ini_file: >
#    dest=/usr/local/phpbrew/php/php-{{ item[0] }}/etc/php-fpm.conf
#    section="{{ item[1].section }}"
#    option="{{ item[1].option }}"
#    value="{{ item[1].value }}"
#    backup=yes
#  with_nested:
#    - php_brew_versions
#    - php_brew_fpm_config

- name: Setup pool.d directories
  file: path=/usr/local/phpbrew/php/php-{{ item }}/etc/pool.d state=directory mode=0775
  with_items: "{{ php_brew_versions }}"

- name: Delete the default POOL configuration file
  file: >
    path=/usr/local/phpbrew/php/php-{{ item[0] }}/etc/pool.d/{{ php_ondrej_default_pool.name }}
    state=absent
  with_items: "{{ php_brew_versions }}"
  when: php_ondrej_default_pool.delete

- name: Copy the POOL configurations
  template: >
    src=pool.conf.j2
    dest=/usr/local/phpbrew/php/php-{{ item[0] }}/etc/pool.d/{{ item[1]['name'] }}.conf
    backup=yes
  with_nested:
    - "{{ php_brew_versions }}"
    - "{{ php_ondrej_pools }}"
  when: php_ondrej_pools|lower != 'none'

- name: Set correct listening sockets
  lineinfile: >
    dest=/usr/local/phpbrew/php/php-{{ item[0] }}/etc/pool.d/{{ item[1]['name'] }}.conf
    regexp="^\s*listen\s*=\s/var/run/php/version-fpm(\.xhprof|)?.sock"
    line="listen = /var/run/php/{{ item[0] | regex_replace('^php(\d)\.(\d)', '\1.\2') }}-fpm\1.sock"
    backrefs=yes
  with_nested:
    - "{{ php_brew_versions }}"
    - "{{ php_ondrej_pools }}"

- name: Setup checkconf script
  template: src=php-fpm-checkconf.j2 dest=/usr/local/phpbrew/php/php-{{ item }}/bin/php-fpm-checkconf mode=ug+x
  with_items: "{{ php_brew_versions }}"

- name: Setup init script
  template: src=etc/init/php-fpm.conf.j2 dest=/etc/init/php{{ item }}-fpm.conf
  with_items: "{{ php_brew_versions }}"

- name: Setup init.d script
  template: src=etc/init.d/php-fpm.j2 dest=/etc/init.d/php{{ item }}-fpm mode=ug+x
  with_items: "{{ php_brew_versions }}"

#- name: Setup systemd script
#  template: src=etc/systemd/php-fpm.service.j2 dest=/lib/systemd/system/php{{ item }}-fpm.service
#  with_items: "{{ php_brew_versions }}"
#  tags: test
#
#- name: Enable systemd service
#  file: src=/lib/systemd/system/php{{ item }}-fpm.service dest=/etc/systemd/system/multi-user.target.wants/php{{ item }}-fpm.service state=link force=yes
#  with_items: "{{ php_brew_versions }}"
#  tags: test
#
#- name: Enable systemd service
#  file: path=/var/lib/systemd/deb-systemd-helper-enabled/multi-user.target.wants/php{{ item }}-fpm.service state=touch
#  with_items: "{{ php_brew_versions }}"
#  tags: test
#
#- name: Setup systemd script
#  template: src=etc/systemd/php-fpm.service.dsh-also.j2 dest=/var/lib/systemd/deb-systemd-helper-enabled/php{{ item }}-fpm.service.dsh-also
#  with_items: "{{ php_brew_versions }}"
#  tags: test

- name: Start php-fpm services
  service: name=php{{ item }}-fpm state=started enabled=yes
  with_items: "{{ php_brew_versions }}"

- name: Make the bin dir exists
  become: vagrant
  file: path=/home/vagrant/bin state=directory mode=0775

- name: Create symlinks for most recent php versions
  become: vagrant
  file: src=/usr/local/phpbrew/php/php-{{ item }}/bin/php dest=/home/vagrant/bin/php{{ item }} state=link force=yes
  with_items: "{{ php_brew_versions }}"

- name: Create shorter symlinks for most recent php versions
  become: vagrant
  file: src=/usr/local/phpbrew/php/php-{{ item }}/bin/php dest=/home/vagrant/bin/php{{ item | regex_replace('^(\d)\.(\d)\.\d*$', '\\1\\2') }} state=link force=yes
  with_items: "{{ php_brew_versions }}"
